plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
	id 'maven-publish'
}

repositories {
    mavenLocal()
    mavenCentral()

    maven {
        name = 'progbits'
        url = "https://archiva.progbits.com/coffer/repository/internal"
    }
}

ext {
	jettyVersion = '11.0.9'
}

dependencies {
    // Use TestNG framework, also requires calling test.useTestNG() below
    testImplementation 'org.testng:testng:7.3.0'

    api("org.eclipse.jetty:jetty-server:$jettyVersion") {
		exclude group: 'org.slf4j', module: 'slf4j-api'
	}

	api("org.eclipse.jetty:jetty-servlet:$jettyVersion") {
		exclude group: 'org.slf4j', module: 'slf4j-api'
	}

	api("org.eclipse.jetty.websocket:websocket-jetty-server:$jettyVersion") {
		exclude group: 'org.slf4j', module: 'slf4j-api'
	}

	api("org.apache.logging.log4j:log4j-api:2.17.1")
	api("org.apache.logging.log4j:log4j-core:2.17.1")
	api("org.apache.logging.log4j:log4j-slf4j-impl:2.17.1")
	api("org.apache.logging.log4j:log4j-layout-template-json:2.17.1")
	api("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.0")
	api("com.fasterxml.jackson.core:jackson-databind:2.13.0")
	api("org.slf4j:slf4j-api:1.7.36")
	
}

tasks.named('test') {
    // Use TestNG for unit tests.
    useTestNG()
}

task getDeps(type: Copy) {
  from sourceSets.main.runtimeClasspath
  into 'lib/'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = "$artifactId"
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
		}
	}

	repositories {
        maven {
            name = 'progbits'
            url = "https://archiva.progbits.com/coffer/repository/internal"
            credentials(PasswordCredentials)
        }
    }
}
